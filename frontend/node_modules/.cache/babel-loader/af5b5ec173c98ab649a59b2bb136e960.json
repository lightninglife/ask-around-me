{"remainingRequest":"/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/thread-loader/dist/cjs.js!/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/babel-loader/lib/index.js!/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paulzhao/ask-around-me/ask-around-me/frontend/src/components/Question.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/paulzhao/ask-around-me/ask-around-me/frontend/src/components/Question.vue","mtime":1594664018278},{"path":"/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3BhdWx6aGFvL2Fzay1hcm91bmQtbWUvYXNrLWFyb3VuZC1tZS9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9Vc2Vycy9wYXVsemhhby9hc2stYXJvdW5kLW1lL2Fzay1hcm91bmQtbWUvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gJ3Z1ZXgnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkhvbWVWaWV3IiwKICBwcm9wczogWydxdWVzdGlvbiddLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkaWFsb2c6IGZhbHNlLAogICAgICBtYXBEaWFsb2c6IGZhbHNlLAogICAgICBtYXJrZXJzOiBbXSwKICAgICAgc3RhclJhdGluZzogMCwKICAgICAgc2F2aW5nOiBmYWxzZSwKICAgICAgY3VycmVudFF1ZXN0aW9uOiB7CiAgICAgICAgbGF0aXR1ZGU6IDQwLjczNTgyMzUsCiAgICAgICAgbG9uZ2l0dWRlOiAtNzMuOTkyNzEwMgogICAgICB9CiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IF9vYmplY3RTcHJlYWQoe30sIG1hcFN0YXRlKHsKICAgIHBvc2l0aW9uOiBmdW5jdGlvbiBwb3NpdGlvbihzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUucG9zaXRpb247CiAgICB9CiAgfSkpLAogIG1ldGhvZHM6IHsKICAgIG9wZW5EaWFsb2c6IGZ1bmN0aW9uIG9wZW5EaWFsb2cocXVlc3Rpb24pIHsKICAgICAgY29uc29sZS5sb2cocXVlc3Rpb24pOwogICAgICB0aGlzLmN1cnJlbnRRdWVzdGlvbiA9IHF1ZXN0aW9uOwogICAgICB0aGlzLnN0YXJSYXRpbmcgPSAwOyAvLyByZXNldCByYXRpbmcKCiAgICAgIHRoaXMuZGlhbG9nID0gdHJ1ZTsKICAgIH0sCiAgICBvcGVuTWFwRGlhbG9nOiBmdW5jdGlvbiBvcGVuTWFwRGlhbG9nKHF1ZXN0aW9uKSB7CiAgICAgIGNvbnNvbGUubG9nKHF1ZXN0aW9uKTsKICAgICAgdGhpcy5jdXJyZW50UXVlc3Rpb24gPSBxdWVzdGlvbjsKICAgICAgdGhpcy5tYXJrZXJzID0gW107CiAgICAgIHRoaXMubWFwRGlhbG9nID0gdHJ1ZTsKICAgIH0sCiAgICBhZGRNYXJrZXI6IGZ1bmN0aW9uIGFkZE1hcmtlcihldmVudCkgewogICAgICB2YXIgbWFya2VyID0gewogICAgICAgIGxhdDogZXZlbnQubGF0TG5nLmxhdCgpLAogICAgICAgIGxuZzogZXZlbnQubGF0TG5nLmxuZygpCiAgICAgIH07CiAgICAgIHRoaXMubWFya2Vycy5wb3AoKTsgLy8gT25seSBvbmUgbWFya2VyIGFsbG93ZWQKCiAgICAgIHRoaXMubWFya2Vycy5wdXNoKHsKICAgICAgICBwb3NpdGlvbjogbWFya2VyCiAgICAgIH0pOwogICAgfSwKICAgIHN1Ym1pdERpYWxvZzogZnVuY3Rpb24gc3VibWl0RGlhbG9nKHR5cGUpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHRva2VuLCB1cmwsIHBheWxvYWQsIF95aWVsZCRheGlvcyRwb3N0LCBkYXRhOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnc3VibWl0RGlhbG9nJyk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpcy4kYXV0aC5nZXRUb2tlblNpbGVudGx5KCk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHRva2VuID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIHVybCA9ICIiLmNvbmNhdChfdGhpcy4kQVBJdXJsLCAiL2Fuc3dlcnMiKTsKICAgICAgICAgICAgICAgIF90aGlzLnNhdmluZyA9IHRydWU7IC8vIEJ1aWxkIHBheWxvYWQgZm9yIHN0YXIvZ2VvIHR5cGUgcXVlc3Rpb25zCgogICAgICAgICAgICAgICAgcGF5bG9hZCA9IHsKICAgICAgICAgICAgICAgICAgcXVlc3Rpb246IF90aGlzLnF1ZXN0aW9uLAogICAgICAgICAgICAgICAgICB0eXBlOiB0eXBlCiAgICAgICAgICAgICAgICB9OwoKICAgICAgICAgICAgICAgIGlmICh0eXBlID09PSAnc3RhcicpIHsKICAgICAgICAgICAgICAgICAgcGF5bG9hZC5yYXRpbmcgPSBfdGhpcy5zdGFyUmF0aW5nOwogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgcGF5bG9hZC5sYXQgPSBfdGhpcy5tYXJrZXJzWzBdLnBvc2l0aW9uLmxhdDsKICAgICAgICAgICAgICAgICAgcGF5bG9hZC5sbmcgPSBfdGhpcy5tYXJrZXJzWzBdLnBvc2l0aW9uLmxuZzsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnUGF5bG9hZDogJywgcGF5bG9hZCk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gOTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMjsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5wb3N0KHVybCwgcGF5bG9hZCwgewogICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogIkJlYXJlciAiLmNvbmNhdCh0b2tlbikKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgICBfeWllbGQkYXhpb3MkcG9zdCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBkYXRhID0gX3lpZWxkJGF4aW9zJHBvc3QuZGF0YTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdSZXN1bHQ6ICcsIGRhdGEpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDIwOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTc6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTc7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDkpOwogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcignRXJyb3I6ICcsIF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAyMDoKICAgICAgICAgICAgICAgIF90aGlzLmRpYWxvZyA9IGZhbHNlOwogICAgICAgICAgICAgICAgX3RoaXMubWFwRGlhbG9nID0gZmFsc2U7CiAgICAgICAgICAgICAgICBfdGhpcy5zYXZpbmcgPSBmYWxzZTsKCiAgICAgICAgICAgICAgY2FzZSAyMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbOSwgMTddXSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Question.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <v-container class=\"pa-0 ma-0\">\n    <!-- Question card -->\n     <v-card class=\"my-2 ma-2\">\n      <v-card-text>\n        <div class=\"my-2 subtitle-1\">{{ question.question }}</div>\n\n        <!-- Readonly star rating showing aggregated score -->\n        <div v-if=\"question.type==='Star'\">\n          <v-rating :value=\"question.avgScore\" color=\"amber\" dense half-increments readonly size=\"24\"\n          ></v-rating> ({{ question.answers }} ratings)\n        </div>\n\n        <div class=\"my-4 subtitle-2\">\n          Posted <strong>{{ moment.unix(question.created/1000).fromNow() }}</strong>\n          <strong v-if=\"question.author===$store.getters.getUser.sub\"> by you</strong>\n        </div>\n      </v-card-text>\n  \n      <!-- Only show \"Answer\" button for questions asked by different user -->\n      <v-card-actions v-if=\"question.author!=$store.getters.getUser.sub\">\n\n        <!-- For star rating questions -->\n        <div v-if=\"question.type==='Star'\">\n          <v-btn text color=\"orange\" dark @click=\"openDialog(question)\">\n            Answer\n          </v-btn>\n        </div>\n\n        <!-- For geo rating questions -->\n        <div v-if=\"question.type==='Geo'\">\n          <v-btn text color=\"orange\" dark @click=\"openMapDialog(question)\">\n            Answer on map\n          </v-btn>\n          <v-btn :disabled=\"question.answers===0\" text color=\"orange\" dark :to=\"{ name: 'Answers', query: { hk: question.hashKey, rk: question.rangeKey }}\">\n            See results\n          </v-btn>\n        </div>\n\n        <!-- <v-spacer></v-spacer> -->\n      </v-card-actions>\n      <v-divider class=\"mx-4\"></v-divider> \n    </v-card> \n\n    <!-- Popup star rating dialog for answering question -->\n    <v-dialog v-model=\"dialog\" persistent max-width=\"290\">\n      <v-card>\n        <v-card-title class=\"headline\">Your rating:</v-card-title>\n        <v-card-text>\n          <!-- <div class=\"my-1 subtitle-2\">Your rating: </div> -->\n          <v-rating v-model=\"starRating\"\n            color=\"amber\"\n            dense\n            half-increments\n            size=\"40\"\n          ></v-rating>\n        </v-card-text>            \n        <v-card-actions> \n          <v-spacer></v-spacer>\n          <v-btn :disabled=\"starRating===0||saving===true\" color=\"success\" text @click=\"submitDialog('star')\">Submit</v-btn>\n          <v-btn :disabled=\"saving===true\" color=\"error\" text @click=\"dialog=false\">Cancel</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n    <!-- Popup geo rating dialog for answering question -->\n    <v-dialog v-model=\"mapDialog\" persistent>\n      <v-card>\n        <v-card-title class=\"headline\">Drop a pin on your answer:</v-card-title>\n        <v-card-text>\n          <!-- <div class=\"my-1 subtitle-2\">Your rating: </div> -->\n          <GmapMap\n            ref=\"gmap\"\n            :center=\"{lat:this.position.latitude, lng:this.position.longitude}\"\n            :zoom=\"7\"\n            map-type-id=\"roadmap\"\n            style=\"width: 100%; height: 400px\"\n            \n            :options=\"{\n              zoomControl: false,\n              zoom: 11,\n              mapTypeControl: false,\n              scaleControl: false,\n              streetViewControl: false,\n              rotateControl: false,\n              fullscreenControl: false,\n              disableDefaultUI: false\n            }\"\n          > \n            <GmapMarker\n              :key=\"index\"\n              v-for=\"(m, index) in markers\"\n              :position=\"m.position\"\n              @click=\"center=m.position\"\n            ></GmapMarker>    \n            <GmapCircle\n              :center=\"{lat:this.currentQuestion.latitude, lng:this.currentQuestion.longitude}\"\n              :radius=\"8000\"\n              @click=\"addMarker\"\n              :options=\"{\n                fillColor:'blue',\n                fillOpacity:0.1,\n                strokeColor: '#0000FF',\n                strokeOpacity: 0.2,\n                strokeWeight: 5\n              }\"\n            />\n          </GmapMap>     \n        </v-card-text>            \n        <v-card-actions> \n          <v-spacer></v-spacer>\n          <v-btn :disabled=\"markers.length===0||saving===true\" color=\"success\" text @click=\"submitDialog('geo')\">Submit</v-btn>\n          <v-btn :disabled=\"saving===true\" color=\"error\" text @click=\"mapDialog=false\">Cancel</v-btn>\n        </v-card-actions>\n      </v-card>\n    </v-dialog>\n\n  </v-container>\n</template>\n\n<script>\nimport axios from \"axios\"\nimport { mapState } from 'vuex'\n\nexport default {\n  name: \"HomeView\",\n  props: ['question'],\n  data: function () {   \n    return {\n      dialog: false,\n      mapDialog: false,\n      markers: [],\n      starRating: 0,\n      saving: false,\n      currentQuestion: {\n        latitude: 40.7358235,\n        longitude: -73.9927102,\n      }\n    }\n  },\n  computed: {\n    ...mapState({\n      position: (state) => state.position\n    })\n  },\n  methods: {\n    openDialog(question) {\n      console.log(question)\n      this.currentQuestion = question\n      this.starRating = 0  // reset rating\n      this.dialog = true\n    },\n    openMapDialog(question) {\n      console.log(question)\n      this.currentQuestion = question\n      this.markers = []\n      this.mapDialog = true\n    },    \n    addMarker(event) {\n      const marker = {\n        lat: event.latLng.lat(),\n        lng: event.latLng.lng()\n      };\n      this.markers.pop() // Only one marker allowed\n      this.markers.push({ position: marker })\n    },\n    async submitDialog(type) {\n      console.log('submitDialog')\n\n      const token = await this.$auth.getTokenSilently();\n      const url = `${this.$APIurl}/answers`\n      this.saving = true\n\n      // Build payload for star/geo type questions\n      let payload = {\n        question: this.question,\n        type\n      }\n\n      if (type === 'star') {\n        payload.rating = this.starRating\n      } else {\n        payload.lat = this.markers[0].position.lat\n        payload.lng = this.markers[0].position.lng\n      }\n\n      console.log('Payload: ', payload)\n      try {\n        const { data } = await axios.post(url, payload,\n          {\n            headers: { \n              Authorization: `Bearer ${token}`\n            }\n          })\n        console.log('Result: ', data) \n      } catch (err) {\n        console.error('Error: ', err)\n      }\n\n      this.dialog = false\n      this.mapDialog = false\n      this.saving = false\n    }\n  }\n}\n\n</script>\n"],"sourceRoot":"src/components"}]}