{"remainingRequest":"/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/babel-loader/lib/index.js!/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paulzhao/ask-around-me/ask-around-me/frontend/src/views/HomeView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/paulzhao/ask-around-me/ask-around-me/frontend/src/views/HomeView.vue","mtime":1594664018280},{"path":"/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3BhdWx6aGFvL2Fzay1hcm91bmQtbWUvYXNrLWFyb3VuZC1tZS9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9Vc2Vycy9wYXVsemhhby9hc2stYXJvdW5kLW1lL2Fzay1hcm91bmQtbWUvZnJvbnRlbmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gJ3Z1ZXgnOwppbXBvcnQgeyBidXMgfSBmcm9tICcuLi9tYWluJzsKaW1wb3J0IFF1ZXN0aW9uIGZyb20gJ0AvY29tcG9uZW50cy9RdWVzdGlvbi52dWUnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIkhvbWVWaWV3IiwKICBjb21wb25lbnRzOiB7CiAgICBRdWVzdGlvbjogUXVlc3Rpb24KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjdXJyZW50TGF0OiA0MC43MzU4MjM1LAogICAgICBjdXJyZW50TG5nOiAtNzMuOTkyNzEwMiwKICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgdXNlcjogbnVsbAogICAgfTsKICB9LAogIGNvbXB1dGVkOiBfb2JqZWN0U3ByZWFkKHt9LCBtYXBTdGF0ZShbJ3F1ZXN0aW9ucyddKSksCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgY29uc29sZS5sb2coJ21vdW50ZWQnKTsKICAgIG5hdmlnYXRvci5nZW9sb2NhdGlvbi5nZXRDdXJyZW50UG9zaXRpb24oZnVuY3Rpb24gKHBvc2l0aW9uKSB7CiAgICAgIGNvbnNvbGUubG9nKCdQb3NpdGlvbiByZXR1cm5lZDogJywgcG9zaXRpb24pOwoKICAgICAgX3RoaXMuJHN0b3JlLmNvbW1pdCgnc2V0UG9zaXRpb24nLCBwb3NpdGlvbik7CgogICAgICBfdGhpcy5jdXJyZW50TGF0ID0gcG9zaXRpb24uY29vcmRzLmxhdGl0dWRlOwogICAgICBfdGhpcy5jdXJyZW50TG5nID0gcG9zaXRpb24uY29vcmRzLmxvbmdpdHVkZTsKCiAgICAgIF90aGlzLnVwZGF0ZVJlc3VsdHMoKTsKICAgIH0sIGZ1bmN0aW9uICgpIHsKICAgICAgY29uc29sZS5sb2coJ0Vycm9yOiBUaGUgR2VvbG9jYXRpb24gc2VydmljZSBmYWlsZWQuJyk7CiAgICB9LCB7CiAgICAgIGVuYWJsZUhpZ2hBY2N1cmFjeTogdHJ1ZSwKICAgICAgdGltZW91dDogMzAwMDAKICAgIH0pOwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgIGJ1cy4kb24oJ2F1dGhlbnRpY2F0ZWQnLCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSh1c2VyKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXMyLiRzdG9yZS5jb21taXQoJ3NldFVzZXInLCB1c2VyKTsKCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnVXNlciBzaWduZWQgaW46ICcsIF90aGlzMi4kc3RvcmUuZ2V0dGVycy5nZXRVc2VyKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKTsKCiAgICAgIHJldHVybiBmdW5jdGlvbiAoX3gpIHsKICAgICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9OwogICAgfSgpKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZVJlc3VsdHM6IGZ1bmN0aW9uIHVwZGF0ZVJlc3VsdHMoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHRva2VuLCB1cmwsIF95aWVsZCRheGlvcyRnZXQsIGRhdGE7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBpZiAoX3RoaXMzLiRzdG9yZS5nZXR0ZXJzLmlzSW5pdGlhbGl6ZWQpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczMuJGF1dGguZ2V0VG9rZW5TaWxlbnRseSgpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICB0b2tlbiA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgLy8gT25seSB1c2UgdGhpcyBsaW5lIGZvciBkZWJ1Z2dpbmchIEl0IGRpc3BsYXlzIHRoZSBKV1QgdG9rZW4gaW4gdGhlIGJyb3dzZXIgY29uc29sZS4KICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHRva2VuKQogICAgICAgICAgICAgICAgdXJsID0gIiIuY29uY2F0KF90aGlzMy4kQVBJdXJsLCAiL3F1ZXN0aW9ucz9sYXQ9IikuY29uY2F0KF90aGlzMy5jdXJyZW50TGF0LCAiJmxuZz0iKS5jb25jYXQoX3RoaXMzLmN1cnJlbnRMbmcpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1VSTDogJywgdXJsKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gOTsKICAgICAgICAgICAgICAgIHJldHVybiBheGlvcy5nZXQodXJsLCB7CiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiAiQmVhcmVyICIuY29uY2F0KHRva2VuKSAvLyBzZW5kIHRoZSBhY2Nlc3MgdG9rZW4gdGhyb3VnaCB0aGUgJ0F1dGhvcml6YXRpb24nIGhlYWRlcgoKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIF95aWVsZCRheGlvcyRnZXQgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIGRhdGEgPSBfeWllbGQkYXhpb3MkZ2V0LmRhdGE7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnUmVzcG9uc2U6ICcsIGRhdGEpOwoKICAgICAgICAgICAgICAgIF90aGlzMy4kc3RvcmUuY29tbWl0KCdzZXRBbGxRdWVzdGlvbnMnLCBkYXRhKTsKCiAgICAgICAgICAgICAgICBfdGhpczMubG9hZGluZyA9IGZhbHNlOwoKICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["HomeView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyHA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,QAAA,QAAA,MAAA;AACA,SAAA,GAAA,QAAA,SAAA;AACA,OAAA,QAAA,MAAA,2BAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,QAAA,EAAA;AADA,GAFA;AAKA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,UADA;AAEA,MAAA,UAAA,EAAA,CAAA,UAFA;AAGA,MAAA,OAAA,EAAA,IAHA;AAIA,MAAA,IAAA,EAAA;AAJA,KAAA;AAMA,GAZA;AAaA,EAAA,QAAA,oBACA,QAAA,CAAA,CAAA,WAAA,CAAA,CADA,CAbA;AAgBA,EAAA,OAhBA,qBAgBA;AAAA;;AACA,IAAA,OAAA,CAAA,GAAA,CAAA,SAAA;AACA,IAAA,SAAA,CAAA,WAAA,CAAA,kBAAA,CAAA,UAAA,QAAA,EAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,qBAAA,EAAA,QAAA;;AACA,MAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,aAAA,EAAA,QAAA;;AACA,MAAA,KAAA,CAAA,UAAA,GAAA,QAAA,CAAA,MAAA,CAAA,QAAA;AACA,MAAA,KAAA,CAAA,UAAA,GAAA,QAAA,CAAA,MAAA,CAAA,SAAA;;AACA,MAAA,KAAA,CAAA,aAAA;AACA,KANA,EAMA,YAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,wCAAA;AACA,KARA,EAQA;AACA,MAAA,kBAAA,EAAA,IADA;AAEA,MAAA,OAAA,EAAA;AAFA,KARA;AAYA,GA9BA;AA+BA,EAAA,OA/BA,qBA+BA;AAAA;;AACA,IAAA,GAAA,CAAA,GAAA,CAAA,eAAA;AAAA,yEAAA,iBAAA,IAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,SAAA,EAAA,IAAA;;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,kBAAA,EAAA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,OAAA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAA;;AAAA;AAAA;AAAA;AAAA;AAKA,GArCA;AAsCA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,2BACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,MAAA,CAAA,MAAA,CAAA,OAAA,CAAA,aADA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,uBAEA,MAAA,CAAA,KAAA,CAAA,gBAAA,EAFA;;AAAA;AAEA,gBAAA,KAFA;AAIA;AACA;AACA,gBAAA,GANA,aAMA,MAAA,CAAA,OANA,4BAMA,MAAA,CAAA,UANA,kBAMA,MAAA,CAAA,UANA;AAOA,gBAAA,OAAA,CAAA,GAAA,CAAA,OAAA,EAAA,GAAA;AAPA;AAAA,uBAQA,KAAA,CAAA,GAAA,CAAA,GAAA,EAAA;AACA,kBAAA,OAAA,EAAA;AACA,oBAAA,aAAA,mBAAA,KAAA,CADA,CACA;;AADA;AADA,iBAAA,CARA;;AAAA;AAAA;AAQA,gBAAA,IARA,oBAQA,IARA;AAaA,gBAAA,OAAA,CAAA,GAAA,CAAA,YAAA,EAAA,IAAA;;AACA,gBAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,iBAAA,EAAA,IAAA;;AACA,gBAAA,MAAA,CAAA,OAAA,GAAA,KAAA;;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AAjBA;AAtCA,CAAA","sourcesContent":["<template>\n  <v-container class=\"pa-0 ma-0\">\n\n    <!-- Intro screen for unauthenticated users -->\n    <div id=\"unauth-view\" v-if=\"!$auth.isAuthenticated\">\n      <v-card class=\"ma-2\">\n        <v-list-item>\n          <v-list-item-avatar color=\"grey\"></v-list-item-avatar>\n          <v-list-item-content>\n            <v-list-item-title class=\"headline\">Welcome!</v-list-item-title>\n            <v-list-item-subtitle>Share local knowledge</v-list-item-subtitle>\n          </v-list-item-content>\n        </v-list-item>\n    \n        <v-img\n          src=\"@/assets/overview.jpg\"\n          height=\"194\"\n        ></v-img>\n    \n        <v-card-text>\n          Who serves the best coffee? Where's the best local park? Get the answers to these questions and more from a local audience!\n        </v-card-text>\n    \n        <v-card-actions>\n          <v-btn text color=\"orange\" href=\"https://bit.ly/askaroundme\"  target=\"_blank\">\n            Learn more\n          </v-btn>\n          <v-btn text color=\"orange\" href=\"https://github.com/aws-samples/ask-around-me/\"  target=\"_blank\">\n            GitHub\n          </v-btn>\n          <v-spacer></v-spacer>\n        </v-card-actions>\n      </v-card>\n    </div>\n\n    <!-- Questions list for authenticated users -->\n    <v-container class=\"pa-0 ma-0\" id=\"auth-view\" v-if=\"$auth.isAuthenticated\">\n      <GmapMap\n        :center=\"{lat:this.currentLat, lng:this.currentLng}\"\n        :zoom=\"7\"\n        map-type-id=\"roadmap\"\n        style=\"width: 100%; height: 300px\"\n        :options=\"{\n          zoomControl: true,\n          zoom: 11,\n          mapTypeControl: false,\n          scaleControl: false,\n          streetViewControl: false,\n          rotateControl: false,\n          fullscreenControl: false,\n          disableDefaultUI: false\n        }\"\n      > \n        <GmapMarker\n          :key=\"index\"\n          v-for=\"(m, index) in questions\"\n          :position=\"{lat: m.latitude, lng: m.longitude}\"\n          :clickable=\"false\"\n          :draggable=\"false\"\n          @click=\"center=m.position\"\n        />\n        <GmapCircle\n          :center=\"{lat: currentLat, lng: currentLng}\"\n          :radius=\"8000\"\n          :options=\"{\n            fillColor:'blue',\n            fillOpacity:0.1,\n            strokeColor: '#0000FF',\n            strokeOpacity: 0.2,\n            strokeWeight: 5\n          }\"\n        />\n      </GmapMap>     \n    </v-container>\n\n    <!-- Loading spinner -->\n    <v-container v-if=\"$auth.isAuthenticated && loading\" >\n      <div class=\"text-center\">\n        <v-progress-circular\n          :size=\"50\"\n          color=\"orange\"\n          indeterminate\n        ></v-progress-circular>        \n      </div>  \n    </v-container>\n\n    <!-- No questions - prompt user to ask one -->\n    <v-container v-if=\"questions.length === 0 && !loading\" >\n      <v-card class=\"ma-2\">\n        <v-card-title class=\"headline\">No questions here</v-card-title>\n        <v-card-subtitle>Whoa! This is a quiet neighborhood. Be the first to ask a question.</v-card-subtitle>\n        <v-card-actions>\n          <v-btn color=\"orange\" text>Ask question</v-btn>\n        </v-card-actions>\n      </v-card>    \n    </v-container>\n    <v-container class=\"pa-0 ma-0\" v-if=\"questions.length > 0\">\n      <v-container class=\"pa-0 ma-0\" v-bind:key=\"index\" v-for=\"(question, index) in questions\">\n        <Question v-bind:question=\"question\"/>\n      </v-container>\n    </v-container>\n\n    <!-- Add question icon -->\n    <v-container class=\"pa-0 ma-0\">\n      <v-btn \n        v-if=\"$auth.isAuthenticated\" \n        fixed\n        dark\n        fab\n        bottom\n        right\n        color=\"red\"\n        class=\"mb-4\"\n        to=\"/ask\">\n        <v-icon>add</v-icon>\n      </v-btn>\n    </v-container>\n  </v-container>\n</template>\n\n<script>\n  import axios from \"axios\"\n  import { mapState } from 'vuex'\n  import { bus } from '../main'\n  import Question from '@/components/Question.vue'\n\n  export default {\n    name: \"HomeView\",\n    components: {\n      Question\n    },\n    data: function () {   \n      return {\n        currentLat: 40.7358235,\n        currentLng: -73.9927102,\n        loading: true,\n        user: null\n      }\n    },\n    computed: {\n      ...mapState(['questions'])\n    },\n    mounted () {\n      console.log('mounted')\n      navigator.geolocation.getCurrentPosition((position) => {\n        console.log('Position returned: ', position)\n        this.$store.commit('setPosition', position)\n        this.currentLat = position.coords.latitude\n        this.currentLng = position.coords.longitude\n        this.updateResults()\n      }, () => {\n        console.log('Error: The Geolocation service failed.')\n      }, {\n        enableHighAccuracy: true,\n        timeout: 30000\n      })\n    },\n    created () {\n      bus.$on('authenticated', async (user) => {\n        this.$store.commit('setUser', user)\n        console.log('User signed in: ', this.$store.getters.getUser)\n\n      })\n    },\n    methods: {\n      async updateResults() {\n        if (!this.$store.getters.isInitialized) return\n        const token = await this.$auth.getTokenSilently()\n\n        // Only use this line for debugging! It displays the JWT token in the browser console.\n        // console.log(token)\n        const url = `${this.$APIurl}/questions?lat=${this.currentLat}&lng=${this.currentLng}`\n        console.log('URL: ', url)\n        const { data } = await axios.get(url, {\n          headers: {\n            Authorization: `Bearer ${token}`    // send the access token through the 'Authorization' header\n          }\n        })\n        console.log('Response: ', data)\n        this.$store.commit('setAllQuestions', data)\n        this.loading = false\n      }\n    }\n  }\n</script>\n"],"sourceRoot":"src/views"}]}