{"remainingRequest":"/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/babel-loader/lib/index.js!/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/vuetify-loader/lib/loader.js??ref--18-0!/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/paulzhao/ask-around-me/ask-around-me/frontend/src/views/AskView.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/paulzhao/ask-around-me/ask-around-me/frontend/src/views/AskView.vue","mtime":1594664018280},{"path":"/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/paulzhao/ask-around-me/ask-around-me/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL1VzZXJzL3BhdWx6aGFvL2Fzay1hcm91bmQtbWUvYXNrLWFyb3VuZC1tZS9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQXNrVmlldycsCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHZhbGlkOiB0cnVlLAogICAgICBxdWVzdGlvbjogJycsCiAgICAgIHF1ZXN0aW9uUnVsZXM6IFtmdW5jdGlvbiAodikgewogICAgICAgIHJldHVybiAhIXYgfHwgJ1F1ZXN0aW9uIGlzIHJlcXVpcmVkJzsKICAgICAgfSwgZnVuY3Rpb24gKHYpIHsKICAgICAgICByZXR1cm4gdiAmJiB2Lmxlbmd0aCA8PSAxMDAgfHwgJ1F1ZXN0aW9uIG11c3QgYmUgbGVzcyB0aGFuIDEwMCBjaGFyYWN0ZXJzJzsKICAgICAgfV0sCiAgICAgIHR5cGU6IG51bGwsCiAgICAgIGl0ZW1zOiBbJ1N0YXIgcmF0aW5nJywgJ0dlbyByYXRpbmcnXSwKICAgICAgbGF6eTogZmFsc2UKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICB2YWxpZGF0ZTogZnVuY3Rpb24gdmFsaWRhdGUoKSB7CiAgICAgIHRoaXMuJHJlZnMuZm9ybS52YWxpZGF0ZSgpOwogICAgfSwKICAgIHJlc2V0OiBmdW5jdGlvbiByZXNldCgpIHsKICAgICAgdGhpcy4kcmVmcy5mb3JtLnJlc2V0KCk7CiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKCcvJyk7CiAgICB9LAogICAgc2F2ZVF1ZXN0aW9uOiBmdW5jdGlvbiBzYXZlUXVlc3Rpb24oKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciB0b2tlbiwgdXJsLCBwYXlsb2FkLCBfeWllbGQkYXhpb3MkcG9zdCwgZGF0YTsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuJGF1dGguZ2V0VG9rZW5TaWxlbnRseSgpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICB0b2tlbiA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICB1cmwgPSAiIi5jb25jYXQoX3RoaXMuJEFQSXVybCwgIi9xdWVzdGlvbnMiKTsKICAgICAgICAgICAgICAgIHBheWxvYWQgPSB7CiAgICAgICAgICAgICAgICAgIHF1ZXN0aW9uOiBfdGhpcy5xdWVzdGlvbiwKICAgICAgICAgICAgICAgICAgdHlwZTogX3RoaXMudHlwZSwKICAgICAgICAgICAgICAgICAgcG9zaXRpb246IF90aGlzLiRzdG9yZS5nZXR0ZXJzLmdldFBvc2l0aW9uCiAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1VSTDogJywgdXJsKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdQYXlsb2FkOiAnLCBwYXlsb2FkKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA3OwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLnBvc3QodXJsLCBwYXlsb2FkLCB7CiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiAiQmVhcmVyICIuY29uY2F0KHRva2VuKQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAxMDoKICAgICAgICAgICAgICAgIF95aWVsZCRheGlvcyRwb3N0ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGRhdGEgPSBfeWllbGQkYXhpb3MkcG9zdC5kYXRhOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1Jlc3VsdDogJywgZGF0YSk7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTg7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxNToKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxNTsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oNyk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmVycm9yKCdFcnJvcjogJywgX2NvbnRleHQudDApOwoKICAgICAgICAgICAgICBjYXNlIDE4OgogICAgICAgICAgICAgICAgX3RoaXMucmVzZXQoKTsKCiAgICAgICAgICAgICAgY2FzZSAxOToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbNywgMTVdXSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["AskView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA,OAAA,KAAA,MAAA,OAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,IAAA,EAAA;AAAA,WAAA;AACA,MAAA,KAAA,EAAA,IADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,aAAA,EAAA,CACA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,CAAA,IAAA,sBAAA;AAAA,OADA,EAEA,UAAA,CAAA;AAAA,eAAA,CAAA,IAAA,CAAA,CAAA,MAAA,IAAA,GAAA,IAAA,2CAAA;AAAA,OAFA,CAHA;AAOA,MAAA,IAAA,EAAA,IAPA;AAQA,MAAA,KAAA,EAAA,CACA,aADA,EAEA,YAFA,CARA;AAYA,MAAA,IAAA,EAAA;AAZA,KAAA;AAAA,GAFA;AAgBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,QAAA;AACA,KAHA;AAIA,IAAA,KAJA,mBAIA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,KAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,GAAA;AACA,KAPA;AAQA,IAAA,YARA,0BAQA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,CAAA,KAAA,CAAA,gBAAA,EADA;;AAAA;AACA,gBAAA,KADA;AAEA,gBAAA,GAFA,aAEA,KAAA,CAAA,OAFA;AAIA,gBAAA,OAJA,GAIA;AACA,kBAAA,QAAA,EAAA,KAAA,CAAA,QADA;AAEA,kBAAA,IAAA,EAAA,KAAA,CAAA,IAFA;AAGA,kBAAA,QAAA,EAAA,KAAA,CAAA,MAAA,CAAA,OAAA,CAAA;AAHA,iBAJA;AASA,gBAAA,OAAA,CAAA,GAAA,CAAA,OAAA,EAAA,GAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,WAAA,EAAA,OAAA;AAVA;AAAA;AAAA,uBAYA,KAAA,CAAA,IAAA,CAAA,GAAA,EAAA,OAAA,EACA;AACA,kBAAA,OAAA,EAAA;AACA,oBAAA,aAAA,mBAAA,KAAA;AADA;AADA,iBADA,CAZA;;AAAA;AAAA;AAYA,gBAAA,IAZA,qBAYA,IAZA;AAkBA,gBAAA,OAAA,CAAA,GAAA,CAAA,UAAA,EAAA,IAAA;AAlBA;AAAA;;AAAA;AAAA;AAAA;AAqBA,gBAAA,OAAA,CAAA,KAAA,CAAA,SAAA;;AArBA;AAuBA,gBAAA,KAAA,CAAA,KAAA;;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBA;AAhCA;AAhBA,CAAA","sourcesContent":["<template>\n  <div class=\"home\">\n    <v-container>\n      <v-card class=\"ma-2\">\n        <v-card-title class=\"headline\">Ask Around</v-card-title>\n        <v-card-subtitle>Enter a question to ask users around you.</v-card-subtitle>\n\n        <v-form class=\"ma-4\"\n          ref=\"form\"\n          v-model=\"valid\"\n          :lazy-validation=\"lazy\"\n        >\n          <v-text-field\n            v-model=\"question\"\n            :counter=\"100\"\n            :rules=\"questionRules\"\n            label=\"Question\"\n            required\n          ></v-text-field>\n    \n          <v-select\n            v-model=\"type\"\n            :items=\"items\"\n            :rules=\"[v => !!v || 'Question type is required']\"\n            label=\"Question type\"\n            required\n          ></v-select>\n          <v-spacer></v-spacer>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <v-btn :disabled=\"!valid\"\n            color=\"success\"\n            class=\"mr-4\"\n            @click=\"saveQuestion\" text>Submit</v-btn>\n            <v-btn color=\"error\"\n            class=\"mr-4\"\n            @click=\"reset\" text>Cancel</v-btn>\n           </v-card-actions>\n        </v-form>\n      </v-card>    \n    </v-container>    \n  </div>\n</template>\n\n<script>\nimport axios from \"axios\"\nexport default {\n  name: 'AskView',\n  data: () => ({\n    valid: true,\n    question: '',\n    questionRules: [\n      v => !!v || 'Question is required',\n      v => (v && v.length <= 100) || 'Question must be less than 100 characters',\n    ],\n    type: null,\n    items: [\n      'Star rating',\n      'Geo rating',\n    ],\n    lazy: false\n  }),  \n  methods: {\n    validate () {\n      this.$refs.form.validate()\n    },\n    reset () {\n      this.$refs.form.reset()\n      this.$router.push('/')\n    },\n    async saveQuestion() {\n      const token = await this.$auth.getTokenSilently();\n      const url = `${this.$APIurl}/questions`\n\n      const payload = { \n        question: this.question,\n        type: this.type,\n        position: this.$store.getters.getPosition\n      }\n      console.log('URL: ', url)\n      console.log('Payload: ', payload)\n      try {\n        const { data } = await axios.post(url, payload,\n          {\n            headers: { \n              Authorization: `Bearer ${token}`\n          }\n        })\n        console.log('Result: ', data) \n\n      } catch (err) {\n        console.error('Error: ', err)\n      }\n      this.reset()\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/views"}]}